/**
 * 새 학기가 시작되었습니다. 현수는 새 짝꿍을 만나 너무 신이 났습니다.
 * 현수네 반에는 N명의 학생들이 있습니다.
 * 선생님은 반 학생들에게 반 번호를 정해 주기 위해
 * 운동장에 반 학생들을 키가 가장 작은 학생부터 일렬로 키순으로 세웠습니다.
 *
 * 제일 앞에 가장 작은 학생부터 반 번호를 1번부터 N번까지 부여합니다.
 * 현수는 짝꿍보다 키가 큽니다.
 * 그런데 현수가 앞 번호를 받고 싶어 짝꿍과 자리를 바꿨습니다.
 * 선생님은 이 사실을 모르고 학생들에게 서있는 순서대로 번호를 부여했습니다.
 *
 * 현수와 짝꿍이 자리를 바꾼 반 학생들의 일렬로 서있는 키 정보가 주어질 때,
 * 현수가 받은 번호와 현수 짝꿍이 받은 번호를 차례로 출력하는 프로그램
 *
 * cf. 첫 번째 줄에 자연수 N(5<=N<=100)이 주어진다.
 * cf. 두 번째 줄에 제일 앞에부터 일렬로 서있는 학생들의 키가 주어진다.
 * cf. 키(높이) 값 H는 (120<=H<=180)의 자연
 * @param {*} array 학생들이 키 순으로 정렬된 배열
 * @returns [현수가 받은 번호, 짝궁이 받은 번호]
 *
 * 1. 오름차순 정렬
 * 2. 오름차순 정렬된 것 중에서 순서가 안맞는 인덱스가 현수
 */
function solution(array) {
  let answer = [];
  let sortArr = array.slice(); // 1차원이면 깊은복사, 2차원이면 얕은복사

  sortArr.sort((a, b) => a - b); // 오름차순

  // (입력배열요소 !== 오름차 정렬된 배열요소)면, 정답
  for (let i = 0; i < array.length; i++) {
    if (array[i] !== sortArr[i]) answer.push(i + 1);
  }

  return answer;
}

console.log(solution([120, 125, 152, 130, 135, 135, 143, 127, 160])); // [ 3, 8 ], 현수가 152, 짝궁이 127
console.log(solution([120, 130, 150, 150, 130, 150])); // [ 3, 5 ]
