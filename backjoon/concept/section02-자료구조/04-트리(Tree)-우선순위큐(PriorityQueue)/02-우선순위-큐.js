/*** 우선순위 큐
 * 우선순위에 따라서 데이터를 추출하는 자료구조
 * 컴퓨터 운영체제, 온라인 게임 매칭 등에서 활용
 * 일반적으로 힙(heap)을 이용해 구현
 */

/*** 우선순위 큐 vs 스택 vs 큐
 * 스택(Stack)                 : 가장 나중에 삽입된 데이터 추출
 * 큐(Queue)                   : 가장 먼저 삽입된 데이터 추출
 * 우선순위 큐(Priority queue)  : 가장 우선순위가 높은 데이터 추출
 */

/*** 우선순위 큐를 구현
 * 데이터의 개수가 𝑁개일때,
 * 우선순위 큐를 구현방식에 따른 시간복잡도는 다음과 같다.
 *
 * 1. 리스트 자료형
 * 		1-1. 삽입 시간 𝑂(1)
 * 		1-2. 삭제 시간 𝑂(𝑁)
 * 2. 힙(Heap)
 * 		2-1. 삽입 시간 𝑂(log𝑁)
 * 		2-2. 삭제 시간 𝑂(log𝑁)
 */

/***
 * 일반적인 형태의 큐는 선형적인 구조를 가진다
 * 반면에 우선순위 큐는 이진 트리(binary tree) 구조를 사용하는 것이 일반적
 *
 * 1. 이진 트리(binary tree) : 최대 2개까지의 자식을 가질 수 있다.
 *
 * 2. 포화 이진 트리 : 리프노드를 제외한 모든 노드가 두 자식을 가지고 있는 트리
 *
 * 3. 완전 이진 트리 : 모든 노드가 왼쪽 자식부터 차근차근 채워진 트리
 *                    왼쪽 자식트리와 오른쪽 자식트리의 높이가 1이상 차이나지 않는 트리
 */
